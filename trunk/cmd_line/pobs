#!/usr/bin/php -q
<?php

/*
   +--------------------------------------------------------------------+
   | POBS - The PHP Obfuscator                                          |
   +--------------------------------------------------------------------+
   | Copyright (c) 2004 Rajesh Kumar                                    |
   +--------------------------------------------------------------------+
   | This program is free software; you can redistribute it and/or      |
   | modify it under the terms of the GNU General Public License as     |
   | published by the Free Software Foundation; either version 2 of the |
   | License, or (at your option) any later version.                    |
   |                                                                    |
   | This program is distributed in the hope that it will be useful,    |
   | but WITHOUT ANY WARRANTY; without even the implied warranty of     |
   | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the file  |
   | COPYING included with this source for more details.                |
   +--------------------------------------------------------------------+
   | August 20 2004                                                     |
   | Version 1.00                                                       |
   +--------------------------------------------------------------------+
   | AUTHOR: Rajesh Kumar <rks@meetrajesh.com>                          |
   +--------------------------------------------------------------------+
  
   $Id$

*/

$TimeStart = microtime(true);

require_once 'cfg.class.php';
require_once 'core.class.php';
require_once 'init.class.php';
require_once 'getopts.class.php';

require_once 'Console/Getopt.php';

$OPT = new ConsoleOptionsHandler;
$INI = new PobsInit;
$CFG = new ConfigHandler('pobs.conf.php');

foreach ($OPT->get('source_dir') as $file_dir) {

    $CFG->set_source_dir($file_dir);
    $API = new PobsCore($CFG, $OPT, $TimeStart);

    if (!is_readable(realpath($CFG->get('SourceDir')))) {
    
        echo('Error: Source ' . (is_dir(realpath($CFG->get('SourceDir'))) ? 'Directory' : 'file') . ' ' . 
                                 $CFG->get('SourceDir') . ' does not exist or is not readable.' . "\n");
        continue;

    }

    if (is_file($CFG->get('SourceDir'))) {
        $API->set_stage_file();
    }

    chdir($CFG->get('SourceDir') . '/../');

    if (!$API->create_target_dir($CFG->get('TargetDir'))) {
        continue;
    }

    $API->gen_long_file();
    $API->replace_with_hashes();
    $API->write_target_files();
    $API->time_elapsed();

    if (is_file($file_dir)) {
        $API->cleanup_stage_file($file_dir);
    }

}

?>